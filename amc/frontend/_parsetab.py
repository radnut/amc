
# _parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL DECLARE IDENTIFIER NUMBER PERM STRING SUBSCRIPT SUM\n        root : statements\n            | empty\n        empty :\n        statements : statements declaration\n            | statements equation\n            | declaration\n            | equation\n        declaration : DECLARE IDENTIFIER kvlist\n        equation : variable '=' expression ';'\n        \n        kvlist : '{' kvlist_content '}'\n            | '{' '}'\n        \n        kvlist_content : kvlist_content ','  kvpair\n            | kvlist_content ','\n            | kvpair\n        \n        list : '(' list_content ')'\n            | '(' ')'\n        \n        list_content : list_content ','  list_item\n            | list_content ','\n            | list_item\n        \n        kvpair : IDENTIFIER '=' wholenumber\n            | IDENTIFIER '=' fraction\n            | IDENTIFIER '=' STRING\n            | IDENTIFIER '=' BOOL\n            | IDENTIFIER '=' list\n        \n        list_item : wholenumber\n            | list\n        \n        expression : expression '+' term\n            | expression '-' term\n            | '-' term\n            | term\n        \n        term : term '*' factor\n            | factor\n        \n        factor : '(' expression ')'\n        \n        factor : fraction\n            | NUMBER\n        \n        factor : SUM SUBSCRIPT '(' expression ')'\n        \n        factor : variable\n        factor : permute\n        \n        variable : IDENTIFIER SUBSCRIPT\n            | IDENTIFIER\n        \n        permute : PERM\n        \n        wholenumber : NUMBER\n            | '-' NUMBER\n        \n        fraction : NUMBER '/' NUMBER\n        "
    
_lr_action_items = {'$end':([0,1,2,3,4,5,9,10,14,28,31,39,],[-3,0,-1,-2,-6,-7,-4,-5,-8,-11,-9,-10,]),'DECLARE':([0,2,4,5,9,10,14,28,31,39,],[6,6,-6,-7,-4,-5,-8,-11,-9,-10,]),'IDENTIFIER':([0,2,4,5,6,9,10,13,14,15,19,21,28,31,32,33,34,39,40,47,],[7,7,-6,-7,11,-4,-5,7,-8,30,7,7,-11,-9,7,7,7,-10,30,7,]),'SUBSCRIPT':([7,24,],[12,38,]),'=':([7,8,12,30,],[-40,13,-39,41,]),'*':([7,12,16,18,20,22,23,25,26,35,42,43,44,45,46,65,],[-40,-39,-37,34,-32,-34,-35,-38,-41,34,34,34,-31,-33,-44,-36,]),';':([7,12,16,17,18,20,22,23,25,26,35,42,43,44,45,46,65,],[-40,-39,-37,31,-30,-32,-34,-35,-38,-41,-29,-27,-28,-31,-33,-44,-36,]),'+':([7,12,16,17,18,20,22,23,25,26,35,36,42,43,44,45,46,57,65,],[-40,-39,-37,32,-30,-32,-34,-35,-38,-41,-29,32,-27,-28,-31,-33,-44,32,-36,]),'-':([7,12,13,16,17,18,20,21,22,23,25,26,35,36,41,42,43,44,45,46,47,56,57,65,67,],[-40,-39,19,-37,33,-30,-32,19,-34,-35,-38,-41,-29,33,55,-27,-28,-31,-33,-44,19,55,33,-36,55,]),')':([7,12,16,18,20,22,23,25,26,35,36,42,43,44,45,46,56,57,58,59,60,61,62,63,64,65,66,67,68,],[-40,-39,-37,-30,-32,-34,-35,-38,-41,-29,45,-27,-28,-31,-33,-44,60,65,-43,66,-16,-19,-25,-26,-42,-36,-15,-18,-17,]),'{':([11,],[15,]),'(':([13,19,21,32,33,34,38,41,47,56,67,],[21,21,21,21,21,21,47,56,21,56,56,]),'NUMBER':([13,19,21,32,33,34,37,41,47,55,56,67,],[23,23,23,23,23,23,46,54,23,58,64,64,]),'SUM':([13,19,21,32,33,34,47,],[24,24,24,24,24,24,24,]),'PERM':([13,19,21,32,33,34,47,],[26,26,26,26,26,26,26,]),'}':([15,27,29,40,46,48,49,50,51,52,53,54,58,60,66,],[28,39,-14,-13,-44,-12,-20,-21,-22,-23,-24,-42,-43,-16,-15,]),'/':([23,54,],[37,37,]),',':([27,29,40,46,48,49,50,51,52,53,54,58,59,60,61,62,63,64,66,67,68,],[40,-14,-13,-44,-12,-20,-21,-22,-23,-24,-42,-43,67,-16,-19,-25,-26,-42,-15,-18,-17,]),'STRING':([41,],[51,]),'BOOL':([41,],[52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root':([0,],[1,]),'statements':([0,],[2,]),'empty':([0,],[3,]),'declaration':([0,2,],[4,9,]),'equation':([0,2,],[5,10,]),'variable':([0,2,13,19,21,32,33,34,47,],[8,8,16,16,16,16,16,16,16,]),'kvlist':([11,],[14,]),'expression':([13,21,47,],[17,36,57,]),'term':([13,19,21,32,33,47,],[18,35,18,42,43,18,]),'factor':([13,19,21,32,33,34,47,],[20,20,20,20,20,44,20,]),'fraction':([13,19,21,32,33,34,41,47,],[22,22,22,22,22,22,50,22,]),'permute':([13,19,21,32,33,34,47,],[25,25,25,25,25,25,25,]),'kvlist_content':([15,],[27,]),'kvpair':([15,40,],[29,48,]),'wholenumber':([41,56,67,],[49,62,62,]),'list':([41,56,67,],[53,63,63,]),'list_content':([56,],[59,]),'list_item':([56,67,],[61,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root","S'",1,None,None,None),
  ('root -> statements','root',1,'p_root','_parser.py',177),
  ('root -> empty','root',1,'p_root','_parser.py',178),
  ('empty -> <empty>','empty',0,'p_empty','_parser.py',183),
  ('statements -> statements declaration','statements',2,'p_statements','_parser.py',188),
  ('statements -> statements equation','statements',2,'p_statements','_parser.py',189),
  ('statements -> declaration','statements',1,'p_statements','_parser.py',190),
  ('statements -> equation','statements',1,'p_statements','_parser.py',191),
  ('declaration -> DECLARE IDENTIFIER kvlist','declaration',3,'p_declaration','_parser.py',196),
  ('equation -> variable = expression ;','equation',4,'p_equation','_parser.py',203),
  ('kvlist -> { kvlist_content }','kvlist',3,'p_kvlist','_parser.py',212),
  ('kvlist -> { }','kvlist',2,'p_kvlist','_parser.py',213),
  ('kvlist_content -> kvlist_content , kvpair','kvlist_content',3,'p_kvlist_content','_parser.py',222),
  ('kvlist_content -> kvlist_content ,','kvlist_content',2,'p_kvlist_content','_parser.py',223),
  ('kvlist_content -> kvpair','kvlist_content',1,'p_kvlist_content','_parser.py',224),
  ('list -> ( list_content )','list',3,'p_list','_parser.py',239),
  ('list -> ( )','list',2,'p_list','_parser.py',240),
  ('list_content -> list_content , list_item','list_content',3,'p_list_content','_parser.py',249),
  ('list_content -> list_content ,','list_content',2,'p_list_content','_parser.py',250),
  ('list_content -> list_item','list_content',1,'p_list_content','_parser.py',251),
  ('kvpair -> IDENTIFIER = wholenumber','kvpair',3,'p_kvpair','_parser.py',266),
  ('kvpair -> IDENTIFIER = fraction','kvpair',3,'p_kvpair','_parser.py',267),
  ('kvpair -> IDENTIFIER = STRING','kvpair',3,'p_kvpair','_parser.py',268),
  ('kvpair -> IDENTIFIER = BOOL','kvpair',3,'p_kvpair','_parser.py',269),
  ('kvpair -> IDENTIFIER = list','kvpair',3,'p_kvpair','_parser.py',270),
  ('list_item -> wholenumber','list_item',1,'p_list_item','_parser.py',276),
  ('list_item -> list','list_item',1,'p_list_item','_parser.py',277),
  ('expression -> expression + term','expression',3,'p_expression','_parser.py',283),
  ('expression -> expression - term','expression',3,'p_expression','_parser.py',284),
  ('expression -> - term','expression',2,'p_expression','_parser.py',285),
  ('expression -> term','expression',1,'p_expression','_parser.py',286),
  ('term -> term * factor','term',3,'p_term','_parser.py',303),
  ('term -> factor','term',1,'p_term','_parser.py',304),
  ('factor -> ( expression )','factor',3,'p_factor_paren','_parser.py',315),
  ('factor -> fraction','factor',1,'p_factor_fraction','_parser.py',322),
  ('factor -> NUMBER','factor',1,'p_factor_fraction','_parser.py',323),
  ('factor -> SUM SUBSCRIPT ( expression )','factor',5,'p_factor_sum','_parser.py',329),
  ('factor -> variable','factor',1,'p_factor_variable','_parser.py',335),
  ('factor -> permute','factor',1,'p_factor_variable','_parser.py',336),
  ('variable -> IDENTIFIER SUBSCRIPT','variable',2,'p_variable','_parser.py',343),
  ('variable -> IDENTIFIER','variable',1,'p_variable','_parser.py',344),
  ('permute -> PERM','permute',1,'p_permute','_parser.py',363),
  ('wholenumber -> NUMBER','wholenumber',1,'p_wholenumber','_parser.py',369),
  ('wholenumber -> - NUMBER','wholenumber',2,'p_wholenumber','_parser.py',370),
  ('fraction -> NUMBER / NUMBER','fraction',3,'p_fraction','_parser.py',379),
]
